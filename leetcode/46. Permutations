Given a collection of distinct integers, return all possible permutations.

Example:

Input: [1,2,3]
Output:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]


class Solution {
public:
    void permute(vector<int>& nums, vector<vector<int>>& m, vector<int>& v, vector<bool>& visited) {
        if(v.size() == nums.size()) {
            m.push_back(v);
            return ;
        }
        for(int i=0; i<nums.size(); i++) {
            if(visited[i])
                continue;
            visited[i] = true;
            v.push_back(nums[i]);
            permute(nums, m, v, visited);
            visited[i] = false;
            v.pop_back();
        }
    }
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> m;
        vector<int> v;
        vector<bool> visited(nums.size(), false);
        permute(nums, m, v, visited);
        return m;
    }
};
